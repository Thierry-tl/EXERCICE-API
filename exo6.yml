openapi: 3.0.3
info:
  title: API de gestion des profils utilisateurs
  description: API pour gérer les profils utilisateurs avec décomposition en sous-ressources
  version: 1.0.0
servers:
  - url: https://api.example.com
    description: Serveur principal

tags:
  - name: Users
    description: Gestion des profils utilisateurs
  - name: Personal Info
    description: Informations personnelles des utilisateurs
  - name: Address
    description: Adresses des utilisateurs
  - name: Preferences
    description: Préférences des utilisateurs

paths:
  /users:
    post:
      tags:
        - Users
      summary: Créer de nouveaux utilisateurs
      description: Crée une liste de nouveaux profils utilisateurs (identifiants générés automatiquement)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
            examples:
              single_user:
                summary: Création d'un utilisateur
                description: Exemple de création d'un seul utilisateur
                value:
                  - first_name: "Jean"
                    last_name: "Dupont"
                    birthdate: "1990-05-15"
                    email: "jean.dupont@email.com"
                    address_street: "123 Rue de la Paix"
                    address_city: "Antananarivo"
                    address_country: "Madagascar"
                    address_postal_code: "101"
                    needs_newsletter: true
                    language: "fr"
              multiple_users:
                summary: Création de plusieurs utilisateurs
                description: Exemple de création de plusieurs utilisateurs
                value:
                  - first_name: "Marie"
                    last_name: "Martin"
                    birthdate: "1985-08-22"
                    email: "marie.martin@email.com"
                    address_street: "456 Avenue des Flamboyants"
                    address_city: "Fianarantsoa"
                    address_country: "Madagascar"
                    address_postal_code: "301"
                    needs_newsletter: false
                    language: "mg"
                  - first_name: "Paul"
                    last_name: "Rakoto"
                    birthdate: "1992-03-10"
                    email: "paul.rakoto@email.com"
                    address_street: "789 Rue de l'Indépendance"
                    address_city: "Toamasina"
                    address_country: "Madagascar"
                    address_postal_code: "501"
                    needs_newsletter: true
                    language: "eng"
      responses:
        '201':
          description: Utilisateurs créés avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
              examples:
                created_users:
                  summary: Utilisateurs créés
                  description: Exemple d'utilisateurs créés avec identifiants générés
                  value:
                    - identifier: "usr_001"
                      first_name: "Jean"
                      last_name: "Dupont"
                      birthdate: "1990-05-15"
                      email: "jean.dupont@email.com"
                      address_street: "123 Rue de la Paix"
                      address_city: "Antananarivo"
                      address_country: "Madagascar"
                      address_postal_code: "101"
                      needs_newsletter: true
                      language: "fr"
        '400':
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Invalid input data: email format is incorrect"

  /users/{id}:
    get:
      tags:
        - Users
      summary: Récupérer un profil utilisateur
      description: Retourne toutes les informations d'un utilisateur spécifique
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '200':
          description: Profil utilisateur récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              examples:
                complete_profile:
                  summary: Profil complet
                  description: Exemple d'un profil utilisateur complet
                  value:
                    identifier: "usr_001"
                    first_name: "Jean"
                    last_name: "Dupont"
                    birthdate: "1990-05-15"
                    email: "jean.dupont@email.com"
                    address_street: "123 Rue de la Paix"
                    address_city: "Antananarivo"
                    address_country: "Madagascar"
                    address_postal_code: "101"
                    needs_newsletter: true
                    language: "fr"
        '404':
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "User not found"

  /users/{id}/personalInfo:
    put:
      tags:
        - Personal Info
      summary: Mettre à jour les informations personnelles
      description: Met à jour uniquement les informations personnelles d'un utilisateur
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
            examples:
              update_personal_info:
                summary: Mise à jour informations personnelles
                description: Exemple de mise à jour des informations personnelles
                value:
                  first_name: "Jean-Claude"
                  last_name: "Dupont-Martin"
                  birthdate: "1990-05-15"
                  email: "jc.dupont@newemail.com"
      responses:
        '200':
          description: Informations personnelles mises à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInfo'
              example:
                first_name: "Jean-Claude"
                last_name: "Dupont-Martin"
                birthdate: "1990-05-15"
                email: "jc.dupont@newemail.com"
        '400':
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/address:
    put:
      tags:
        - Address
      summary: Mettre à jour l'adresse
      description: Met à jour uniquement l'adresse d'un utilisateur
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
            examples:
              update_address:
                summary: Mise à jour adresse
                description: Exemple de mise à jour d'adresse
                value:
                  address_street: "456 Nouvelle Avenue"
                  address_city: "Antananarivo"
                  address_country: "Madagascar"
                  address_postal_code: "102"
      responses:
        '200':
          description: Adresse mise à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
              example:
                address_street: "456 Nouvelle Avenue"
                address_city: "Antananarivo"
                address_country: "Madagascar"
                address_postal_code: "102"
        '400':
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/preferences:
    put:
      tags:
        - Preferences
      summary: Mettre à jour les préférences
      description: Met à jour uniquement les préférences d'un utilisateur
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
            examples:
              update_preferences:
                summary: Mise à jour préférences
                description: Exemple de mise à jour des préférences
                value:
                  needs_newsletter: false
                  language: "eng"
      responses:
        '200':
          description: Préférences mises à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
              example:
                needs_newsletter: false
                language: "eng"
        '400':
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    UserIdParam:
      name: id
      in: path
      required: true
      description: Identifiant unique de l'utilisateur
      schema:
        type: string
        pattern: '^usr_[0-9]{3}$'
      examples:
        user_001:
          summary: Utilisateur 001
          value: "usr_001"
        user_042:
          summary: Utilisateur 042
          value: "usr_042"

  schemas:
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
          description: Prénom de l'utilisateur
          minLength: 1
          maxLength: 50
          example: "Jean"
        last_name:
          type: string
          description: Nom de famille de l'utilisateur
          minLength: 1
          maxLength: 50
          example: "Dupont"
        birthdate:
          type: string
          format: date
          description: Date de naissance au format YYYY-MM-DD
          example: "1990-05-15"
        email:
          type: string
          format: email
          description: Adresse email de l'utilisateur
          example: "jean.dupont@email.com"
      required:
        - first_name
        - last_name
        - birthdate
        - email

    Address:
      type: object
      properties:
        address_street:
          type: string
          description: Rue et numéro de l'adresse
          minLength: 1
          maxLength: 100
          example: "123 Rue de la Paix"
        address_city:
          type: string
          description: Ville
          minLength: 1
          maxLength: 50
          example: "Antananarivo"
        address_country:
          type: string
          description: Pays
          minLength: 1
          maxLength: 50
          example: "Madagascar"
        address_postal_code:
          type: string
          description: Code postal
          pattern: '^[0-9]{3}$'
          example: "101"
      required:
        - address_street
        - address_city
        - address_country
        - address_postal_code

    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
          description: Indique si l'utilisateur souhaite recevoir la newsletter
          example: true
        language:
          type: string
          enum: [mg, fr, eng]
          description: Langue préférée de l'utilisateur
          example: "fr"
      required:
        - needs_newsletter
        - language

    CreateUserProfile:
      allOf:
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'
      description: Schéma pour créer un profil utilisateur (sans identifiant)

    UserProfile:
      allOf:
        - type: object
          properties:
            identifier:
              type: string
              description: Identifiant unique généré par le serveur
              pattern: '^usr_[0-9]{3}$'
              example: "usr_001"
          required:
            - identifier
        - $ref: '#/components/schemas/CreateUserProfile'
      description: Profil utilisateur complet avec identifiant

    Error:
      type: object
      properties:
        error:
          type: string
          description: Message d'erreur détaillé
          example: "User not found"
      required:
        - error